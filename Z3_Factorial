(echo  "starting Factorial ...")

; creating Var and Lab datatypes 
; ALL CAPS ???????
(declare-datatypes () ((V X Y Z)))
(declare-datatypes () ((L l1 l2 l3 l4 l5 l6 l?)))

; EN1 STARTS
(define-fun En1 ((v!1 V)(l!1 L)) Bool 
  
  (
    or  (and (= v!1 X)(= l!1 l?))
        (and (= v!1 Y)(= l!1 l?))
        (and (= v!1 Z)(= l!1 l?))
  )
  
 )  
 ; EN1 ENDS 
 
 
 ; EX1 STARTS
(define-fun En1 ((v!1 V)(l!1 L)) Bool 
  
  (
    or  (and (= v!1 X)(= l!1 l?))
        (and (= v!1 Y)(= l!1 l1))
        (and (= v!1 Z)(= l!1 l?))
  )
  
 )  
 ; EX1 ENDS 
 
 (assert 
   
   (forall ((v!1 V)(l!1 L)) 
     
        (ite 
              (= v!1 Y)  ; if v equals y
               , () ; then this line           
               , (ite
                      (= l l!1)  ; if this
                      ,(Ex1 v l); then this
                      ,(not (Ex1 v l) ); else this
                        
                 )
               , (= (Ex1 V!1 l!1)(En1 V!1 l!1)); else this line 
         )
   )
 )
